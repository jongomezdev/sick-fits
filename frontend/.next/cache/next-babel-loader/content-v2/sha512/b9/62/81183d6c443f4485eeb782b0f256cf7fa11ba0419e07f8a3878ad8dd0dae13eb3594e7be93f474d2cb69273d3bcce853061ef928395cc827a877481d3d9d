{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jonathan Gomez\\\\Desktop\\\\sick-fits\\\\frontend\\\\components\\\\Reset.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage';\nconst REQUEST_RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $email: String!\n    $password: String!\n    $token: String!\n  ) {\n    redeemUserPasswordResetToken(\n      email: $email\n      token: $token\n      password: $password\n    ) {\n      code\n      message\n    }\n  }\n`;\nexport default function Reset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: '',\n    password: '',\n    token: ''\n  });\n  const [reset, {\n    data,\n    loading,\n    error\n  }] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const res = await reset().catch(console.error);\n    console.log(res);\n    console.log({\n      data,\n      loading,\n      error\n    });\n    resetForm();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"reset your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"success.. you can now sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"request reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Jonathan Gomez/Desktop/sick-fits/frontend/components/Reset.js"],"names":["useMutation","gql","useForm","Form","CURRENT_USER_QUERY","Error","REQUEST_RESET_MUTATION","Reset","inputs","handleChange","resetForm","email","password","token","reset","data","loading","error","variables","handleSubmit","e","preventDefault","res","catch","console","log","redeemUserPasswordResetToken"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,sBAAsB,GAAGL,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,eAAe,SAASM,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAsCR,OAAO,CAAC;AAClDS,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE,EAFwC;AAGlDC,IAAAA,KAAK,EAAE;AAH2C,GAAD,CAAnD;AAKA,QAAM,CAACC,KAAD,EAAQ;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAR,IAAoCjB,WAAW,CACnDM,sBADmD,EAEnD;AACEY,IAAAA,SAAS,EAAEV;AADb,GAFmD,CAArD;;AAMA,iBAAeW,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMR,KAAK,GAAGS,KAAR,CAAcC,OAAO,CAACP,KAAtB,CAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEV,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAZ;AACAP,IAAAA,SAAS;AACV;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAES,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEW,4BAAN,MAAuC,IAAvC,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAElB,MAAM,CAACG,KALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAgBE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,YAAY,EAAC,UAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACI,QALhB;AAME,UAAA,QAAQ,EAAEH;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eA4BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport useForm from '../lib/useForm';\r\nimport Form from './styles/Form';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport Error from './ErrorMessage';\r\n\r\nconst REQUEST_RESET_MUTATION = gql`\r\n  mutation RESET_MUTATION(\r\n    $email: String!\r\n    $password: String!\r\n    $token: String!\r\n  ) {\r\n    redeemUserPasswordResetToken(\r\n      email: $email\r\n      token: $token\r\n      password: $password\r\n    ) {\r\n      code\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Reset() {\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: '',\r\n    password: '',\r\n    token: '',\r\n  });\r\n  const [reset, { data, loading, error }] = useMutation(\r\n    REQUEST_RESET_MUTATION,\r\n    {\r\n      variables: inputs,\r\n    }\r\n  );\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const res = await reset().catch(console.error);\r\n    console.log(res);\r\n    console.log({ data, loading, error });\r\n    resetForm();\r\n  }\r\n\r\n  return (\r\n    <Form method=\"POST\" onSubmit={handleSubmit}>\r\n      <h2>reset your password</h2>\r\n      <Error error={error} />\r\n      <fieldset>\r\n        {data?.redeemUserPasswordResetToken === null && (\r\n          <p>success.. you can now sign in</p>\r\n        )}\r\n\r\n        <label htmlFor=\"email\">\r\n          email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your Email Address\"\r\n            autoComplete=\"email\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            autoComplete=\"password\"\r\n            value={inputs.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">request reset</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}